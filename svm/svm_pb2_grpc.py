# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import svm_pb2 as svm__pb2


class PredictStub(object):
  """The predict service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Prediction = channel.unary_unary(
        '/svm.Predict/Prediction',
        request_serializer=svm__pb2.FlowerFeature.SerializeToString,
        response_deserializer=svm__pb2.FlowerClass.FromString,
        )


class PredictServicer(object):
  """The predict service definition.
  """

  def Prediction(self, request, context):
    """Sends a request and returns a prediction.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PredictServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Prediction': grpc.unary_unary_rpc_method_handler(
          servicer.Prediction,
          request_deserializer=svm__pb2.FlowerFeature.FromString,
          response_serializer=svm__pb2.FlowerClass.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'svm.Predict', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
